<?php
$title="подставлена переменная!";
$answer1="<br>Ответ: сравнение не строгое, т.е. типы данных не сравниваются, а строковая переменная b приводится к числу 5 <br>";
$answer2="<br>Ответ: строковое значение инструкцией (int) как бы 'принудительно' приводится к целочисленному значению, лидирущий 0 отбрасывается <br>";
$answer3="<br>Ответ: сравнение строгое, т.е. типы данных тоже сравниваются, а они в данном случае различны <br>";
$answer4="<br>Ответ: сравнение строгое, т.е. типы данных сравниваются, а строковая переменная приводится к числу, если цифр нет, то будет 0  <br>";
$dateTime = new DateTime();
?>

<h1>В заголовок <?=$title ?> </h1>
<p>
    $a = 5;
    $b = '05';
    var_dump($a == $b);         // Почему true?
    <?=$answer1 ?>
    var_dump((int)'012345');     // Почему 12345?
    <?=$answer2 ?>
    var_dump((float)123.0 === (int)123.0); // Почему false?
    <?=$answer3 ?>
    var_dump((int)0 === (int)'hello, world'); // Почему true?
    <?=$answer4 ?>
</p>

<!--Преобразуем текущую дату к строковому значению:-->
<p> <?php echo $dateTime->format('Y-m-d'); ?> </p>

<p>Поменяем переменные местами:</p>
<?php
//Задание трудноватое, так как  не знаем толком синтаксис операций
$a=1;
$b=2;
echo $a, " --- ", $b, "<br>";
//Простой вариант использовать list
//list — Присваивает переменным из списка значения подобно массиву
list($a,$b)=[$b,$a];
echo $a, " --- ", $b, "<br>";
?>
